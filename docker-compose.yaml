version: '3.9'

services:
  postgres:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    # since everything is run in docker containers in the same network, no need to forward the port
    # ports:
    #   - "${DJANGO_DB_PORT}:5432/tcp"
    volumes:
      - postgresData:/var/lib/postgresql/data
    environment:
      POSTGRES_NAME: "${POSTGRES_NAME}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"

  adminer:
    image: adminer
    container_name: adminer
    restart: unless-stopped
    ports:
      - "8081:8080"

  webapp:
    container_name: webapp
    build: ./places_remember
    # command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./places_remember:/code
      - ./static:/static
    # since everything is run in docker containers in the same network, no need to forward the port
    # ports:
    #   - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres

  nginx:
    container_name: nginx
    restart: unless-stopped
    image: nginx
    ports:
        - 80:80
        - 443:443
    environment:
      NGINX_HOST: "${NGINX_HOST}"
      SSL_KEY_PATH: "${SSL_KEY_PATH}"
      SSL_CERT_PATH: "${SSL_CERT_PATH}"
      # NGINX_ENVSUBST_OUTPUT_DIR: "/etc/nginx"
    volumes:
        - ./nginx_templates/nginx.conf:/etc/nginx/nginx.conf
        - ./nginx_templates:/etc/nginx/templates
        - ./static:/static
        - ./certs:/certs
    depends_on:
      - webapp

volumes:
  postgresData: